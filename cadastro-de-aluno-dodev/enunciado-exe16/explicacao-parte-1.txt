detalhadamente essa parte  
O ChatGPT disse:
ChatGPT
Claro! Vamos detalhar essa parte do código:

javascript
Copiar código
if (!array.some(x => x.Nome == nome))
Essa linha está verificando se não existe um aluno com o mesmo nome no array antes de adicionar um novo aluno. Vamos dividir essa expressão em partes:

1. array.some():
some() é um método embutido em arrays no JavaScript.
Ele percorre todos os elementos de um array e testa se ao menos um deles atende a uma condição específica (retornando true ou false).
Se pelo menos um elemento cumprir a condição, o some() retorna true. Se nenhum elemento atender à condição, ele retorna false.
2. x => x.Nome == nome:
Aqui, estamos usando uma função de seta (arrow function). A função de seta é passada como argumento para o método some(). Vamos desmembrar:
x é cada elemento do array (arrayAlunos neste caso) que está sendo testado.
x.Nome acessa a propriedade Nome de cada aluno armazenado no array.
x.Nome == nome: Esta é a condição que estamos verificando. Ela compara o valor da propriedade Nome do aluno atual (x.Nome) com o nome fornecido como parâmetro para a função CadastrarAluno.
Se o valor de x.Nome for igual ao valor de nome (ou seja, se já existir um aluno com esse nome no array), a função de seta retornará true para aquele elemento.
Se não for igual, a função retornará false para aquele elemento.
3. Negações com ! (negação lógica):
O operador ! é usado para negar o valor booleano que vem após ele.
Se o método some() retornar true (indicando que já existe um aluno com o mesmo nome), o operador ! inverterá esse valor para false.
Se o método some() retornar false (indicando que não existe nenhum aluno com o mesmo nome), o operador ! inverterá esse valor para true.
Resumo:
A expressão if (!array.some(x => x.Nome == nome)) está fazendo o seguinte:

Percorre o array para verificar se já existe algum aluno com o mesmo nome.
Se existir, o método some() retornará true, e a negação ! o transformará em false, impedindo que o código dentro do if seja executado (ou seja, não adiciona o aluno duplicado).
Se não existir, o método some() retornará false, a negação ! o transformará em true, e o novo aluno será adicionado ao array, pois não há duplicidade.
Em outras palavras, essa linha garante que um aluno só será adicionado ao array se o nome dele ainda não estiver presente, evitando alunos duplicados com o mesmo nome.






